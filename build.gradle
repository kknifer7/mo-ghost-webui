plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'io.knifer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://maven.aliyun.com/repository/central' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    maven { url 'https://maven.aliyun.com/repository/jcenter' }
    maven { url 'https://maven.aliyun.com/repository/spring' }
    maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
    maven { url 'https://maven.aliyun.com/repository/releases' }
    maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/releases' }
    maven { url 'https://maven.aliyun.com/repository/grails-core' }
    maven { url 'https://maven.aliyun.com/repository/mapr-public' }
    mavenCentral()
}

ext {
    dv = [
            compress                :       '1.23.0',
            xz                      :       '1.9',
            guava                   :       '32.0.1-jre',
            jaxb                    :       '2.4.0-b180830.0359',
            ip2region               :       '2.7.0',
            tianaiCaptcha           :       '1.4.1',
            hibernateJpamodelgen    :       '6.4.0.CR1'
    ]
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "com.google.guava:guava:$dv.guava"
    implementation "org.apache.commons:commons-compress:$dv.compress"
    implementation "org.tukaani:xz:$dv.xz"
    implementation "javax.xml.bind:jaxb-api:$dv.jaxb"
    implementation "cloud.tianai.captcha:tianai-captcha-springboot-starter:$dv.tianaiCaptcha"
    implementation "org.lionsoul:ip2region:$dv.ip2region"
    runtimeOnly "org.xerial:sqlite-jdbc"
    runtimeOnly 'org.hibernate.orm:hibernate-community-dialects'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "org.hibernate:hibernate-jpamodelgen:$dv.hibernateJpamodelgen"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}